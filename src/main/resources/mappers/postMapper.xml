<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.memo.mapper.PostMapper">
 	<select id="selectPostList" resultType="map">
 		SELECT 
 			*
 		FROM
 			`post`
 	</select>
 	
 	
 	<!-- @GetMapping("/post-list-view") XML 구현 -->
 	<!-- `내림차순`으로 정렬한 postList를 `다음버튼` 클릭으로 내림차순으로 나열, 
 	`이전버튼` 클릭으로  이전 목록이 있는 postList를 역순으로 정렬해 나열하는 기능, 
 	아무 버튼을 누르지 않았을 때의 기능을 구현하기 위한 쿼리문 -->
 	<select id="selectPostListByUserId" parameterType="map" resultType="com.memo.domain.Post">
 		SELECT
 			`id`, 
 			`userId`, 
 			`subject`, 
 			`content`, 
 			`imagePath`, 
 			`createdAt`, 
 			`updatedAt`
 		FROM 
 			`post`
 		WHERE
 			`userId` = #{userId}
	 		<if test="direction == 'next'">
	 		<![CDATA[
	 		AND `id` < #{standardId}
	 		]]>
	 		ORDER BY `id` DESC
	 		</if>
	 		
	 		<if test="direction == 'prev'">
	 		<![CDATA[
	 		AND `id` > #{standardId}
	 		]]>
	 		ORDER BY `id` ASC
	 		</if>
 		
	 		<if test="direction == 'null'">
	 		ORDER BY `id` DESC
	 		</if>
 		LIMIT ${limit} <!-- #은 `(백틱)으로 감싸는 형태 -->
 	</select>
 	
 	
 	<!-- 페이징 버튼 말소 기능을 위한 postId(글 id) select -->
 	<select id="selectPostIdByUserIdAsSort" parameterType="map" resultType="int">
 		SELECT
 			`id`
 		FROM
 			`post`
 		WHERE
 			`userId` = #{userId}
 		ORDER BY `id` ${sort}
 		LIMIT 1
 	</select>
 	
 	
 	<!-- @PostMapping("/create") -->
 	<insert id="insertPost" parameterType="map">
 	INSERT INTO `post`
 		(
 		`userId`, 
		`subject`, 
		`content`, 
		`imagePath`, 
		`createdAt`, 
		`updatedAt`
 		)
 	VALUES
 		(
 		#{userId},
		#{subject},
		#{content},
		#{imagePath}, 
		NOW(), 
		NOW()
 		)
 	</insert>
 	
 	
 	<!-- @GetMapping("/post-detail-view") 구현 -->
 	<select id="selectPostByPostIdUserId" parameterType="map" resultType="com.memo.domain.Post">
 		SELECT
 			`id`, 
 			`userId`, 
 			`subject`, 
 			`content`, 
 			`imagePath`, 
 			`createdAt`, 
 			`updatedAt`
 		FROM 
 			`post`
 		WHERE
 			`userId` = #{userId}
 			AND `id` = #{postId}
 			
 	</select>
 	
 	
 	<!-- @PutMapping("/update") -->
 	<update id="updatePostByPostId" parameterType="map">
		UPDATE `post`
		SET
			`subject` = #{subject}, 
			`content` = #{content}, 
			<if test="imagePath != null">
			`imagePath` = #{imagePath}, 
			</if>
			`updatedAt` = NOW()
		WHERE
			`id` = #{postId}
	</update>
 	
 	
 	<!-- @DeleteMapping("/delete") -->
	<delete id="deletePostByPostId" parameterType="int">
		DELETE
		FROM
			`post`
		WHERE
			`id` = #{postId}
	</delete>
 </mapper>